{"version":3,"sources":["firebase.js","components/Main.js","components/Create.js","components/ViewPost.js","components/Error.js","App.js","index.js"],"names":["firebaseCache","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getFirebase","firebase","initializeApp","useStyles","makeStyles","theme","card","progress","width","marginTop","spacing","grid","flexGrow","pagination","Main","useState","loading","setLoading","blogPosts","setBlogPosts","classes","length","database","ref","orderByChild","once","then","snapshot","posts","snapshotVal","val","slug","push","newestFirst","reverse","className","LinearProgress","Fragment","Grid","container","map","blogPost","item","xs","md","lg","key","Card","CardActionArea","CardMedia","component","alt","coverImageAlt","height","image","coverImage","title","CardContent","Typography","gutterBottom","variant","color","content","datePretty","CardActions","Button","size","href","form","submit","margin","background","border","borderRadius","boxShadow","Create","history","setTitle","setSlug","setCoverImage","setCoverImageAlt","setContent","onSubmit","e","preventDefault","date","now","Date","year","getFullYear","month","getMonth","day","getDate","formatted","pretty","toLocaleDateString","generateDate","newPost","dateFormatted","child","set","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","value","onChange","target","placeholder","multiline","rows","type","justifyContent","ViewPost","match","params","currentPost","setCurrentPost","openDialog","setOpenDialog","postDoesNotExist","to","onEditMode","i","el","document","querySelectorAll","el2","toggleAttribute","handleCloseDialog","src","hide-on-edit","reveal-on-edit","hidden","updatePost","update","onClick","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","remove","Error","createMuiTheme","palette","primary","main","secondary","button","App","ThemeProvider","Container","maxWidth","AppBar","position","Toolbar","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.37330db8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport database from \"firebase/database\";\n\nconst config = {\n    apiKey: \"AIzaSyARmesD84-IcUHaew4SoQDWQWUCFF6l_3w\",\n    authDomain: \"react-blog-29329.firebaseapp.com\",\n    databaseURL: \"https://react-blog-29329.firebaseio.com\",\n    projectId: \"react-blog-29329\",\n    storageBucket: \"react-blog-29329.appspot.com\",\n    messagingSenderId: \"804797815485\",\n    appId: \"1:804797815485:web:8136f5d447eebaea1375d4\",\n};\n\nlet firebaseCache;\n\nexport const getFirebase = () => {\n  if (firebaseCache) {\n    return firebaseCache;\n  }\n\n  firebase.initializeApp(config);\n  firebaseCache = firebase;\n  return firebase;\n};\n","import React, { useState } from \"react\";\n\nimport { getFirebase } from \"../firebase\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  LinearProgress,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    // maxWidth: 345,\n    // height: \"100%\"\n  },\n  progress: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  grid: {\n    flexGrow: 1,\n  },\n  pagination: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  }\n}));\n\nconst Main = () => {\n  const [loading, setLoading] = useState(true);\n  const [blogPosts, setBlogPosts] = useState([]);\n  const classes = useStyles();\n\n  if (loading && !blogPosts.length) {\n    getFirebase()\n      .database()\n      .ref(\"/posts\")\n      .orderByChild(\"datePretty\")\n      .once(\"value\")\n      .then((snapshot) => {\n        let posts = [];\n        const snapshotVal = snapshot.val();\n        for (let slug in snapshotVal) {\n          posts.push(snapshotVal[slug]);\n        }\n\n        const newestFirst = posts.reverse();\n        setBlogPosts(newestFirst);\n        setLoading(false);\n      });\n  }\n\n  if (loading) {\n    return (\n      <div className={classes.progress}>\n        <LinearProgress />\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.grid} spacing={2}>\n        {blogPosts.map((blogPost) => (\n          <Grid item xs={12} md={4} lg={4} key={blogPost.slug}>\n            <Card className={classes.card}>\n              <CardActionArea>\n                <CardMedia\n                  component=\"img\"\n                  alt={blogPost.coverImageAlt}\n                  height=\"200\"\n                  image={blogPost.coverImage}\n                  title={blogPost.title}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {blogPost.title}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {blogPost.content}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                    {blogPost.datePretty}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\" href={`/${blogPost.slug}`}>\n                  Read more\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n        \n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Button,\n  Typography,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { getFirebase } from \"../firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n  },\n}));\n\nconst Create = ({ history }) => {\n  const classes = useStyles();\n\n  const [title, setTitle] = useState(\"\");\n  const [slug, setSlug] = useState(\"\");\n  const [coverImage, setCoverImage] = useState(\"\");\n  const [coverImageAlt, setCoverImageAlt] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const generateDate = () => {\n    const now = new Date();\n    const options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n\n    const year = now.getFullYear();\n\n    let month = now.getMonth() + 1;\n    if (month < 10) {\n      month = `0${month}`;\n    }\n\n    const day = now.getDate();\n    if (day < 10) {\n      day = `0${day}`;\n    }\n\n    return {\n      formatted: `${year}-${month}-${day}`,\n      pretty: now.toLocaleDateString(\"en-US\", options)\n    };\n  };\n\n  const createPost = (e) => {\n    e.preventDefault();\n    const date = generateDate();\n    const newPost = {\n      title,\n      dateFormatted: date.formatted,\n      datePretty: date.pretty,\n      slug,\n      coverImage,\n      coverImageAlt,\n      content\n    };\n    getFirebase()\n      .database()\n      .ref()\n      .child(`posts/${slug}`)\n      .set(newPost)\n      .then(() => \n        history.push(`/`)\n        );\n  };\n  \n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Card>\n              <CardContent>\n                <Typography\n                  gutterBottom\n                  variant=\"h5\"\n                  component=\"h2\"\n                  color=\"primary\"\n                >\n                  Add a post\n                </Typography>\n                <form className={classes.form} onSubmit={createPost}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={6} lg={6}>\n                      <TextField\n                        autoComplete=\"title\"\n                        name=\"title\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"title\"\n                        label=\"Title\"\n                        autoFocus\n                        value={title}\n                        onChange={({ target: { value } }) => {\n                          setTitle(value);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={6}>\n                      <TextField\n                        autoComplete=\"slug\"\n                        name=\"slug\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"slug\"\n                        label=\"Slug\"\n                        autoFocus\n                        value={slug}\n                        onChange={({ target: { value } }) => {\n                          setSlug(value);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={6}>\n                      <TextField\n                        autoComplete=\"coverImage\"\n                        name=\"coverImage\"\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"coverImage\"\n                        label=\"Image URL\"\n                        autoFocus\n                        placeholder=\"https://placekitten.com/g/300/700\"\n                        onChange={({ target: { value } }) => {\n                          setCoverImage(value);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={6}>\n                      <TextField\n                        autoComplete=\"coverImageAlt\"\n                        name=\"coverImageAlt\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"coverImageAlt\"\n                        label=\"Image Alt\"\n                        autoFocus\n                        onChange={({ target: { value } }) => {\n                          setCoverImageAlt(value);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete=\"content\"\n                        name=\"content\"\n                        variant=\"outlined\"\n                        multiline\n                        rows={4}\n                        required\n                        fullWidth\n                        id=\"content\"\n                        label=\"Blog Content\"\n                        autoFocus\n                        onChange={({ target: { value } }) => {\n                          setContent(value);\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.submit}\n                >\n                  Save\n                </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Create;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { getFirebase } from \"../firebase\";\n\nimport {\n  LinearProgress,\n  Grid,\n  Card,\n  CardContent,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n  Typography,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    justifyContent: \"center\",\n  },\n  progress: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst ViewPost = ({ match, history }) => {\n  const classes = useStyles();\n  const slug = match.params.slug;\n  const [loading, setLoading] = useState(true);\n  const [currentPost, setCurrentPost] = useState();\n  const [openDialog, setOpenDialog] = useState(false);\n  const postDoesNotExist = !currentPost;\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  if (loading && !currentPost) {\n    getFirebase()\n      .database()\n      .ref()\n      .child(`/posts/${slug}`)\n      .once(\"value\")\n      .then((snapshot) => {\n        if (snapshot.val()) {\n          setCurrentPost(snapshot.val());\n        }\n        setLoading(false);\n      });\n  }\n\n  if (loading) {\n    return (\n      <div className={classes.progress}>\n        <LinearProgress />\n      </div>\n    );\n  }\n\n  if (postDoesNotExist) {\n    return <Redirect to=\"/404\" />;\n  }\n\n  const onEditMode = (i) => {\n    var el = document.querySelectorAll(\"[reveal-on-edit='true']\");\n    var el2 = document.querySelectorAll(\"[hide-on-edit='true']\");\n    for (i = 0; i < el.length; i++) {\n      // el[i].classList.toggle(\"show\");\n      el[i].toggleAttribute(\"hidden\");\n    }\n    for (i = 0; i < el.length; i++) {\n      // el2[i].classList.toggle(\"hide\");\n      el2[i].toggleAttribute(\"hidden\");\n    }\n  };\n\n  const editPost = () => {\n    onEditMode();\n  };\n\n  const onEditPost = (e) => {\n    e.preventDefault();\n    const updatePost = {\n      title,\n      content,\n    };\n\n    getFirebase()\n      .database()\n      .ref()\n      .child(`posts/${slug}`)\n      .update(updatePost)\n      .then(() => history.push(`/`));\n  }\n\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const deletePost = () => {\n    getFirebase()\n      .database()\n      .ref()\n      .child(`posts/${slug}`)\n      .remove()\n      .then(() => history.push(`/`));\n  };\n\n  return (\n    <div>\n      <Grid container className={classes.grid}>\n        <Grid item xs={12} md={8}>\n          <Card>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt={currentPost.coverImageAlt}\n                height=\"300\"\n                src={currentPost.coverImage}\n                title=\"Contemplative Reptile\"\n              />\n              <CardContent>\n                <div hide-on-edit=\"true\">\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {currentPost.title}\n                  </Typography>\n                  <Typography color=\"textSecondary\" component=\"i\">\n                    {currentPost.datePretty}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {currentPost.content}\n                  </Typography>\n                </div>\n                <div reveal-on-edit=\"true\" hidden>\n                  <form onSubmit={onEditPost}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete=\"title\"\n                        name=\"title\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"title\"\n                        label=\"Title\"\n                        placeholder={currentPost.title}\n                        autoFocus\n                        onChange={({ target: { value } }) => {\n                          setTitle(value);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <TextField\n                    autoComplete=\"content\"\n                    name=\"content\"\n                    variant=\"outlined\"\n                    multiline\n                    rows={4}\n                    required\n                    fullWidth\n                    id=\"content\"\n                    label=\"Blog Content\"\n                    autoFocus\n                    placeholder={currentPost.content}\n                    onChange={({ target: { value } }) => {\n                      setContent(value);\n                    }}\n                  />\n                    </Grid>\n                    <div reveal-on-edit=\"true\" hidden>\n                      <Button size=\"small\" color=\"primary\" onClick={onEditMode}>\n                        Back\n                      </Button>\n                      &nbsp;\n                      <Button size=\"small\" color=\"primary\" type=\"submit\">\n                        Save\n                      </Button>\n                    </div>\n                  </Grid>\n                  </form>\n                </div>\n              </CardContent>\n              <CardActions>\n              <div hide-on-edit=\"true\">\n                <Button size=\"small\" color=\"primary\" onClick={editPost}>\n                  Edit\n                </Button>\n                <Button size=\"small\" color=\"primary\" onClick={handleOpenDialog}>\n                  Delete\n                </Button>\n              </div>\n            </CardActions>\n            </CardActionArea>\n            \n          </Card>\n          <Dialog\n            open={openDialog}\n            onClose={handleCloseDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">Delete post</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                Are you sure you want to delete this post?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseDialog} color=\"primary\">\n                No\n              </Button>\n              <Button onClick={deletePost} color=\"primary\" autoFocus>\n                Yes\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ViewPost;\n","import React from \"react\";\n\nconst Error = () => {\n  return <h1>Error page!</h1>;\n};\n\nexport default Error;","import React from \"react\";\nimport { Redirect, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport { AppBar, Container, Toolbar, Typography, Button } from \"@material-ui/core\";\n\nimport Main from \"./components/Main\";\nimport Create from \"./components/Create\";\nimport ViewPost from \"./components/ViewPost\";\nimport Error from \"./components/Error\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#FE6B8B\",\n    },\n    secondary: {\n      main: \"#FF8E53\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#fff\"\n  }\n}));\n\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container maxWidth=\"md\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Button className={classes.button} href=\"/\">\n              Home\n            </Button>\n            <Button className={classes.button} href=\"/create\">\n              Create\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <br></br>\n        <Router>\n          <main>\n            <Switch>\n              <Route exact path=\"/\" component={Main} />\n              <Route path=\"/create\" component={Create} />\n              <Route path=\"/404\" component={Error} />\n              <Route path=\"/:slug\" component={ViewPost} />\n            </Switch>\n          </main>\n        </Router>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}